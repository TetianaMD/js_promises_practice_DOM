{"mappings":"ACEA,IAAM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,6BACV,GAEA,WAAW,WACT,EAAO,AAAI,MAAM,8BACnB,EAAG,IACL,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAnC,EACE,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,EAAQ,8BACV,GAEA,SAAS,gBAAgB,CAAC,cAAe,SAAC,CAA1C,EACE,EAAQ,8BACV,EACF,GAEM,EAAe,IAAI,QAAQ,SAAC,CAAlC,EACE,IAAI,EAAY,CAAA,EACZ,EAAa,CAAA,EAEX,EAAc,SAAC,CAArB,EACM,AAAa,IAAb,EAAE,MAAM,CACV,EAAY,CAAA,EACU,IAAb,EAAE,MAAM,EACjB,CAAA,EAAa,CAAA,CADR,EAIH,GAAa,GACf,EAAQ,6BAEZ,EAEA,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAEA,SAAS,EAAiB,CAAO,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CAC3B,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,YAAY,CAAC,UAAW,gBACrC,SAAS,IAAI,CAAC,MAAM,CAAC,GAEjB,IACF,EAAa,WAAW,CAAG,EAC3B,EAAa,SAAS,CAAG,EAAU,QAAU,UAEjD,CAGA,EACG,IAAI,CAAC,SAAC,CADT,EACqB,OAAA,EAAiB,EACnC,GAAA,KAAK,CAAC,SAAC,CAAP,EAAiB,OAAA,EAAiB,EAAM,OAAO,CAAE,CAAA,E,GAEpD,EAAc,IAAI,CAAC,SAAC,CAApB,EAAgC,OAAA,EAAiB,E,GAEjD,EAAa,IAAI,CAAC,SAAC,CAAnB,EAA+B,OAAA,EAAiB,E","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar firstPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        resolve(\"First promise was resolved\");\n    });\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n});\nvar secondPromise = new Promise(function(resolve) {\n    document.addEventListener(\"click\", function(e) {\n        resolve(\"Second promise was resolved\");\n    });\n    document.addEventListener(\"contextmenu\", function(e) {\n        resolve(\"Second promise was resolved\");\n    });\n});\nvar thirdPromise = new Promise(function(resolve) {\n    var leftClick = false;\n    var rightClick = false;\n    var handleClick = function(e) {\n        if (e.button === 0) leftClick = true;\n        else if (e.button === 2) rightClick = true;\n        if (leftClick && rightClick) resolve(\"Third promise was resolved\");\n    };\n    document.addEventListener(\"click\", handleClick);\n    document.addEventListener(\"contextmenu\", handleClick);\n});\nfunction showNotification(message) {\n    var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var notification = document.createElement(\"div\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    document.body.append(notification);\n    if (notification) {\n        notification.textContent = message;\n        notification.className = isError ? \"error\" : \"success\";\n    }\n}\n// Add handlers to promises\nfirstPromise.then(function(message) {\n    return showNotification(message);\n}).catch(function(error) {\n    return showNotification(error.message, true);\n});\nsecondPromise.then(function(message) {\n    return showNotification(message);\n});\nthirdPromise.then(function(message) {\n    return showNotification(message);\n});\n\n//# sourceMappingURL=index.379dd2c4.js.map\n","'use strict';\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  document.addEventListener('click', (e) => {\n    resolve('Second promise was resolved');\n  });\n\n  document.addEventListener('contextmenu', (e) => {\n    resolve('Second promise was resolved');\n  });\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  let leftClick = false;\n  let rightClick = false;\n\n  const handleClick = (e) => {\n    if (e.button === 0) {\n      leftClick = true;\n    } else if (e.button === 2) {\n      rightClick = true;\n    }\n\n    if (leftClick && rightClick) {\n      resolve('Third promise was resolved');\n    }\n  };\n\n  document.addEventListener('click', handleClick);\n  document.addEventListener('contextmenu', handleClick);\n});\n\nfunction showNotification(message, isError = false) {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  document.body.append(notification);\n\n  if (notification) {\n    notification.textContent = message;\n    notification.className = isError ? 'error' : 'success';\n  }\n}\n\n// Add handlers to promises\nfirstPromise\n  .then((message) => showNotification(message))\n  .catch((error) => showNotification(error.message, true));\n\nsecondPromise.then((message) => showNotification(message));\n\nthirdPromise.then((message) => showNotification(message));\n"],"names":["firstPromise","Promise","resolve","reject","document","addEventListener","setTimeout","Error","secondPromise","e","thirdPromise","leftClick","rightClick","handleClick","button","showNotification","message","isError","arguments","length","notification","createElement","setAttribute","body","append","textContent","className","then","catch","error"],"version":3,"file":"index.379dd2c4.js.map"}